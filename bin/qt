#!/usr/bin/env python3
# pylint: disable=invalid-name
"""Script for electron spin polarization and transmission."""
import argparse
import sys
from QuantumTransport import TransportCal, plot_spinpol,plot_spinpol2
#from time_util import *


def main():
    """
    function for qt
    """
    description = """
    Calculation of electron transport
    """
    epilog = """output: percentage (spin polarization) of transmitted electron
    """
    parser = argparse.ArgumentParser(
        usage='%(prog)s [options] ',
        description=description,
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog=epilog)
    group = parser.add_mutually_exclusive_group()
    parser.add_argument('filename', metavar='filename', type=str, help='input file')
    group.add_argument('-ciss', '--ciss_calc', action="store_true",
           help='Calculation chiral induced spin polarization transport ')
    parser.add_argument('-db', '--debug', action="store_true", 
           help= "debug print")
    parser.add_argument('-l', '--load_qt_dat', action="store_true", 
           help= "load files generated by the qt_dat script")
    parser.add_argument('-p', '--plot_spinpol', action="store_true", 
           help= "plot transmission.txt file")
    args = parser.parse_args()
    if len(sys.argv) == 0:
        parser.print_help()
        sys.exit(1)
    calc=TransportCal(qcfile=args.filename,ciss_calc=args.ciss_calc,load_data= \
         args.load_qt_dat,debug=args.debug)
    if args.ciss_calc:
        calc.ciss_transmission()
        if args.plot_spinpol:
            plot_spinpol('transmission.txt','log')
    else:
        calc.radical_transmission()
        if args.plot_spinpol:
            plot_spinpol2('transmission.txt','log')

if __name__ == "__main__":
    main()
